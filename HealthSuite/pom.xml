<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- parent -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.0</version>
        <!-- lookup parent from repository -->
        <relativePath/>
    </parent>
    <!-- services -->
    <groupId>com.rslakra.healthcare</groupId>
    <artifactId>HealthSuite</artifactId>
    <version>${revision}</version>
    <packaging>war</packaging>
    <name>${project.artifactId}</name>
    <description>The ${project.artifactId} Webapp</description>

    <!-- properties -->
    <properties>
        <!-- revision -->
        <revision>0.0.0</revision>

        <!-- sourceEncoding & outputEncoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- java version -->
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- maven plugins -->
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-checkstyle-plugin.version>3.5.0</maven-checkstyle-plugin.version>
        <maven-release-plugin.version>3.1.1</maven-release-plugin.version>

        <!-- checkstyle -->
        <code-styles.dir>https://raw.githubusercontent.com/rslakra/code-styles/master</code-styles.dir>
        <checkstyle.threshold>0</checkstyle.threshold>

        <!-- appsuite-core -->
        <appsuite-core.version>0.0.34</appsuite-core.version>

        <!-- appsuite-spring -->
        <appsuite-spring.version>0.0.15</appsuite-spring.version>

        <!-- lombok -->
        <lombok.version>1.18.34</lombok.version>

        <!-- swagger -->
        <swagger.skip>false</swagger.skip>

        <!-- csv parser version -->
        <commons-csv.version>1.9.0</commons-csv.version>
        <opencsv.version>5.7.0</opencsv.version>
        <!-- excel parser version -->
        <poi.version>5.4.0</poi.version>
        <poi-ooxml.version>5.4.0</poi-ooxml.version>

        <!-- junit-jupiter-params -->
        <junit-jupiter-params.version>5.10.2</junit-jupiter-params.version>

    </properties>

    <!-- dependencies -->
    <dependencies>

        <!-- appsuite-core -->
        <dependency>
            <groupId>com.rslakra.appsuite</groupId>
            <artifactId>appsuite-core</artifactId>
            <version>${appsuite-core.version}</version>
        </dependency>

        <!-- appsuite-spring -->
        <dependency>
            <groupId>com.rslakra.appsuite</groupId>
            <artifactId>appsuite-spring</artifactId>
            <version>${appsuite-spring.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-tomcat -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!--            <scope>provided</scope>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>6.1.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>6.1.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>6.1.13</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.2.0.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.18.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.20</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.2.224</version>
            <!--<scope>test</scope>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>9.2.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!-- build -->
    <build>
        <!-- finalName  -->
        <finalName>${project.artifactId}</finalName>

        <!-- plugins -->
        <plugins>
            <!-- spring-boot-maven-plugin -->
            <!--
            Once 'spring-boot-maven-plugin' has been included in your pom.xml, it automatically tries to rewrite
            archives to make them executable by using the 'spring-boot:repackage' goal. You should configure your
            project to build a jar or war (as appropriate) by using the usual 'packaging' element.

            The main class that you want to launch can be specified either by using a configuration option or by adding
            a 'Main-Class' attribute to the manifest in the usual way. If you do not specify a main class, the plugin
            searches for a class with a 'public static void main(String[] args)' method.

            To build a war file that is both executable and deployable into an external container, you need to mark
            the embedded container dependencies as “provided”.

            -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- maven-compiler-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- maven-checkstyle-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>${code-styles.dir}/checkstyle.xml</configLocation>
                    <propertiesLocation>${code-styles.dir}/checkstyle.properties</propertiesLocation>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <configLocation>${code-styles.dir}/styles.xml</configLocation>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <maxAllowedViolations>${checkstyle.threshold}</maxAllowedViolations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- reporting -->
    <reporting>
        <!-- plugins -->
        <plugins>
            <!-- maven-checkstyle-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>${code-styles.dir}/styles.xml</configLocation>
                    <propertiesLocation>${code-styles.dir}/checkstyle.properties</propertiesLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>
